import 'package:flutter/material.dart';
import 'package:flutter_messenger/models/chat.class.dart';
import 'package:flutter_messenger/models/message.class.dart';
import 'package:flutter_messenger/models/user.class.dart';
import 'package:flutter_messenger/screens/chat_list.screen.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(const MessengerApp());
}

class MessengerApp extends StatelessWidget {
  final colorScheme = const ColorScheme(
    brightness: Brightness.light,
    primary: Color.fromARGB(255, 80, 96, 109),
    onPrimary: Color.fromARGB(255, 33, 45, 54),
    secondary: Color(0xFFEDF2F6),
    onSecondary: Color(0xFF9DB7CB),
    tertiary: Colors.cyan,
    onTertiary: Color(0xFF5E7A90),
    background: Colors.white,
    onBackground: Colors.black,
    error: Colors.red,
    onError: Colors.blue,
    surface: Color(0xFFEDF2F6),
    onSurface: Color(0xFF2B333E),
    outlineVariant: Color(0xFF9db7cb),
  );

  const MessengerApp({super.key});

  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider(
      create: (context) => MessengerAppState(),
      child: MaterialApp(
        theme: ThemeData(
          useMaterial3: true,
          fontFamily: "Gilroy-Medium",
          colorScheme: colorScheme,
        ),
        home: const ChatListScreen(),
      ),
    );
  }
}

class MessengerAppState extends ChangeNotifier {
  final currentUser = User.fullConstructor(
    '1',
    '–ù–∏–∫–æ–ª–∞–π',
    '–ú–∞–º–µ–¥–æ–≤',
    true,
    DateTime(2024, 2, 1, 16, 7, 43),
  );

  final friends = <User>[
    User.fullConstructor(
        '2', '–í–∏–∫—Ç–æ—Ä', '–í–ª–∞—Å–æ–≤', true, DateTime(2024, 2, 1, 16, 7, 43)),
    User.fullConstructor(
        '3', '–°–∞—à–∞', '–ê–ª–µ–∫—Å–µ–µ–≤', false, DateTime(2024, 2, 1, 0, 7, 20)),
    User.fullConstructor(
        '4', '–ü—ë—Ç—Ä', '–ñ–∞—Ä–∏–Ω–æ–≤', false, DateTime(2024, 1, 31, 16, 7, 43)),
    User.fullConstructor(
        '5', '–ê–ª–∏–Ω–∞', '–ñ—É–∫–æ–≤–∞', true, DateTime(2024, 2, 1, 16, 8, 27)),
    User.fullConstructor(
        '6', 'Test', 'Testov', false, DateTime(2024, 2, 1, 19, 8, 27)),
  ];

  final chats = <Chat>[
    Chat(
      ['1', '2'],
      <Message>[
        Message(
          '1',
          DateTime(2022, 1, 27, 21, 41),
          text: "–°–¥–µ–ª–∞–π –º–Ω–µ –∫–æ—Ñ–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞",
          status: MessageStatus.read,
        ),
        Message('2', DateTime(2022, 1, 27, 21, 41, 1),
            text: "–û–∫–µ–π", status: MessageStatus.read),
        Message('1', DateTime(2022, 1, 30, 21, 41, 1),
            text: "–£–∂–µ —Å–¥–µ–ª–∞–ª?", status: MessageStatus.sent),
        Message('1', DateTime.now(),
            text: "–í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ?", status: MessageStatus.sent),
      ],
    ),
    Chat(
      ['1', '4'],
      <Message>[
        Message(
          '1',
          DateTime(2024, 2, 1, 20, 17, 12, 992),
          text: "–ó–∞–≤—Ç—Ä–∞ –Ω–∞–ø–æ–º–Ω–∏",
        ),
        Message(
          '2',
          DateTime(2024, 2, 1, 20, 17, 12, 992),
          text: "–æ–∫",
        ),
        Message(
          '2',
          DateTime(2024, 2, 2, 20, 17, 11),
          text: "–¢—ã —Å–∫–æ—Ä–æ —Ç–∞–º?",
        ),
        Message(
          '2',
          DateTime(2024, 2, 2, 20, 17, 12),
          text: "–ú—ã —É–∂–µ –∂–¥—ë–º",
        ),
        Message(
          '1',
          DateTime(2024, 2, 2, 20, 17, 12, 992),
          text: "–í—ã—Ö–æ–∂—É",
        ),
      ],
    ),
    Chat(
      ['1', '3'],
      <Message>[
        Message(
          '1',
          DateTime(2024, 1, 31, 20, 14, 12, 992),
          text:
              "–î–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üåü –°–æ–ª–Ω—Ü–µ —Å–≤–µ—Ä–∫–∞–µ—Ç –Ω–∞ –Ω–µ–±–µ, —Å–ª–æ–≤–Ω–æ –±—Ä–∏–ª–ª–∏–∞–Ω—Ç, –∏ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç —Ç–µ–±—è —Å–≤–æ–∏–º —Ç–µ–ø–ª–æ–º. –í–µ—Ç–µ—Ä —à–µ–ø—á–µ—Ç —Ç–∞–π–Ω—ã –¥–µ—Ä–µ–≤—å–µ–≤, –∞ –∑–≤–µ–∑–¥—ã —É–ª—ã–±–∞—é—Ç—Å—è —Å –≤—ã—Å–æ—Ç—ã —Å–≤–æ–∏—Ö –Ω–µ–±–µ—Å–Ω—ã—Ö —Ç—Ä–æ–Ω–æ–≤. –≠—Ç–æ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ –º–∏—Ä –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–≤–æ–∏ –æ–±—ä—è—Ç–∏—è –∏ –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç —Ç–µ–±—è –≤ —Å–≤–æ—é –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—É—é —Å–∏–º—Ñ–æ–Ω–∏—é. –ü—É—Å—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±—É–¥–µ—Ç –¥–ª—è —Ç–µ–±—è –∫–∞–∫ –Ω–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ –∫–Ω–∏–≥–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π. –ü—É—Å—Ç—å —Ç–≤–æ–∏ –º–µ—á—Ç—ã —Ä–∞—Å—Ç—É—Ç, –∫–∞–∫ —Ü–≤–µ—Ç—ã –≤–µ—Å–Ω–æ–π, –∏ –ø—É—Å—Ç—å —Ç–≤–æ–∏ —É–ª—ã–±–∫–∏ –±—É–¥—É—Ç —è—Ä—á–µ —Å–æ–ª–Ω—Ü–∞.",
        ),
        Message(
          '1',
          DateTime(2024, 2, 1, 20, 17, 12, 992),
          text: "–°–º–æ—Ç—Ä–∏ —á—Ç–æ –Ω–∞—Ñ–æ—Ç–∫–∞–ª –Ω–∞ –¥–Ω—è—Ö :P",
          attachment:
              '/data/user/0/com.example.flutter_chat/cache/741cf611-ec9e-48b7-af7a-9b2efe6c3e4a/IMG_20240218_192308.jpg',
        ),
        Message(
          '2',
          DateTime(2024, 2, 1, 20, 20, 12, 992),
          text: "–ù–∏—á–µ–≥–æ —Å–µ–±–µ, —ç—Ç–æ –≥–¥–µ —Ç—ã —Ç–∞–∫–∏–µ –≤–∏–¥—ã –Ω–∞—à—ë–ª?",
        ),
      ],
    )
  ];

  var friendsFilterText = '';

  void sendMessage(
    final Message message,
    final String collocutorId,
  ) {
    if (message.isEmpty) {
      return;
    }

    final chat = chats.firstWhere(
      (chat) => chat.userIds.contains(
        collocutorId,
      ),
      orElse: () {
        final newChat = Chat.empty([currentUser.id, collocutorId]);
        chats.add(newChat);
        return newChat;
      },
    );

    chat.addMessage(message);
    notifyListeners();
  }

  void setFriendsFilterText(String newFilterText) {
    friendsFilterText = newFilterText.toLowerCase();
    notifyListeners();
  }
}
